{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Container/Container.module.css","components/FriendList/FriendList.module.css","components/Container/Container.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","utils/GetRandomColor.js","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","user","name","tag","location","avatar","stats","statsContent","Object","entries","map","key","value","label","quantity","profile","description","src","alt","Statistics","title","statisticsItem","item","style","backgroundColor","Math","random","percentage","id","statistics","stat_list","FriendListItem","friends","friend","status","isOnline","width","FriendList","list","TransactionHistory","items","table","tHeadCell","type","amount","currency","indexOf","tCellFirst","str","arr","split","splice","toUpperCase","join","tCellSecond","tCellLast","App","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCAvSD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,UAAY,sCAAsC,WAAa,yC,gBCA3HD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,UAAY,8BAA8B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gBCAzND,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,+BAA+B,KAAO,+B,2RCA7ID,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,2B,44FCKVC,MAJf,YAAgC,IAAZC,EAAW,EAAXA,SAChB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,wBC6C1BI,MA7Cf,YAA4B,IAATC,EAAQ,EAARA,KACTC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAC/BC,EAAeC,OAAOC,QAAQH,GAAOI,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAC/D,OACE,+BACE,sBAAMf,UAAWC,IAAEe,MAAnB,SAA2BF,IAC3B,sBAAMd,UAAWC,IAAEgB,SAAnB,SAA8BF,MAFvBD,MAOb,OACE,sBAAKd,UAAWC,IAAEiB,QAAlB,UACE,sBAAKlB,UAAWC,IAAEkB,YAAlB,UACE,qBACEC,IAAKZ,EACLa,IAAI,gHACJrB,UAAWC,IAAEO,SAEf,mBAAGR,UAAWC,IAAEI,KAAhB,SAAuBA,IACvB,oBAAGL,UAAWC,IAAEK,IAAhB,cAAuBA,KACvB,mBAAGN,UAAWC,IAAEM,SAAhB,SAA2BA,OAG7B,oBAAIP,UAAWC,IAAEQ,MAAjB,SACGC,Q,gBCMMY,MA9Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,MACdC,EAD8B,EAATf,MACEI,KAAI,SAAAY,GAC/B,OACE,qBAAIzB,UAAWC,IAAEwB,KAAoBC,MAAO,CAACC,gBCPlB,iBACH,IAAhBC,KAAKC,SADc,2BAEH,IAAhBD,KAAKC,SAFc,2BAGH,IAAhBD,KAAKC,SAHc,QDO3B,UACE,sBAAM7B,UAAWC,IAAEe,MAAnB,SAA2BS,EAAKT,QAChC,sBAAMhB,UAAWC,IAAE6B,WAAnB,SAAgCL,EAAKK,eAFXL,EAAKM,OAMrC,OACE,0BAAS/B,UAAWC,IAAE+B,WAAtB,UACGT,GAAS,oBAAIvB,UAAWC,IAAEsB,MAAjB,SAAyBA,IAEnC,oBAAIvB,UAAWC,IAAEgC,UAAjB,SACGT,Q,iCESMU,MAxBf,YACE,OADmC,EAAXC,QACRtB,KAAI,SAAAuB,GAClB,OACE,qBAAoBpC,UAAWC,IAAEwB,KAAjC,UACE,sBAAMzB,UAAWC,IAAEoC,OAAQX,MAAO,CAAEC,gBAAiBS,EAAOE,SAAW,QAAU,SACjF,qBAAKtC,UAAWC,IAAEO,OAAQY,IAAKgB,EAAO5B,OAAQa,IAAI,GAAGkB,MAAM,OAC3D,mBAAGvC,UAAWC,IAAEI,KAAhB,SAAuB+B,EAAO/B,SAHvB+B,EAAOL,QCkBPS,MApBf,YAAkC,IAAZL,EAAW,EAAXA,QACpB,OACE,oBAAInC,UAAWC,IAAEwC,KAAjB,SACE,cAAC,EAAD,CACEN,QAASA,O,gBC2CFO,MAhDf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,wBAAO3C,UAAWC,IAAE2C,MAApB,UAEA,gCACE,+BACA,oBAAI5C,UAAWC,IAAE4C,UAAjB,kBACA,oBAAI7C,UAAWC,IAAE4C,UAAjB,oBACA,oBAAI7C,UAAWC,IAAE4C,UAAjB,2BAIF,gCACGF,EAAM9B,KAAI,SAAAY,GAAS,IACZM,EAA+BN,EAA/BM,GAAIe,EAA2BrB,EAA3BqB,KAAMC,EAAqBtB,EAArBsB,OAAQC,EAAavB,EAAbuB,SACxB,OACE,qBAAatB,MAAQiB,EAAMM,QAAQxB,GAAM,EAAI,CAAEE,gBAAiB,sBAAyB,CAAEA,gBAAiB,sBAA5G,UACE,oBAAI3B,UAAWC,IAAEiD,WAAjB,SACG,SAAyBC,GACxB,IAAIC,EAAMD,EAAIE,MAAM,IAEpB,OADAD,EAAIE,OAAO,EAAG,EAAGF,EAAI,GAAGG,eACjBH,EAAII,KAAK,IAHjB,CAIEV,KAGL,oBAAI9C,UAAWC,IAAEwD,YAAjB,SAA+BV,IAC/B,oBAAI/C,UAAWC,IAAEyD,UAAjB,SAA6BV,MAVtBjB,Y,qCCYJ4B,MAlBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEvD,KAAMA,IACR,cAAC,EAAD,CACEmB,MAAM,eACNd,MAAOmD,IACT,cAAC,EAAD,CACEnD,MAAOmD,IACT,cAAC,EAAD,CACEzB,QAASA,IACX,cAAC,EAAD,CACEQ,MAAOkB,QCrBfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce238b5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1yGRC\",\"description\":\"Profile_description__2_q4S\",\"avatar\":\"Profile_avatar__28XMI\",\"name\":\"Profile_name__32TLC\",\"tag\":\"Profile_tag__1_Z1b\",\"location\":\"Profile_location__yr9Ke\",\"stats\":\"Profile_stats__10er9\",\"label\":\"Profile_label__3ihfi\",\"quantity\":\"Profile_quantity__2D78z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__13pBW\",\"tHeadCell\":\"TransactionHistory_tHeadCell__2Rc9m\",\"tCellFirst\":\"TransactionHistory_tCellFirst__3SMPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1oEhc\",\"title\":\"Statistics_title__2Bo8P\",\"stat_list\":\"Statistics_stat_list__3_E6e\",\"item\":\"Statistics_item__W3b_W\",\"label\":\"Statistics_label__1R7Py\",\"percentage\":\"Statistics_percentage__1Bkkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1QOlG\",\"status\":\"FriendListItem_status__2oPQF\",\"avatar\":\"FriendListItem_avatar__M1UVF\",\"name\":\"FriendListItem_name__aE39u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2qvxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__v-XV4\"};","import s from './Container.module.css';\r\n\r\nfunction Container({children}) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import s from './Profile.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Profile({ user }) {\r\n  const { name, tag, location, avatar, stats } = user;\r\n  const statsContent = Object.entries(stats).map(([key, value]) => {\r\n    return (\r\n      <li key={key}>\r\n        <span className={s.label}>{key}</span>\r\n        <span className={s.quantity}>{value}</span>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={s.avatar}\r\n        />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        {statsContent}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape ({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired\r\n    }).isRequired\r\n  })\r\n}\r\n\r\nexport default Profile;","import s from \"./Statistics.module.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { getRandomRgbColor } from \"../../utils/GetRandomColor\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  const statisticsItem = stats.map(item => {\r\n    return (\r\n      <li className={s.item} key={item.id} style={{backgroundColor: getRandomRgbColor()}}>\r\n        <span className={s.label}>{item.label}</span>\r\n        <span className={s.percentage}>{item.percentage}</span>\r\n      </li>);\r\n  });\r\n    \r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.stat_list}>\r\n        {statisticsItem}\r\n      </ul>\r\n    </section>);\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired\r\n    }).isRequired\r\n  )\r\n}\r\n\r\nexport default Statistics;","export const getRandomRgbColor = () => (\r\n    `rgb(   ${Math.random() * 256}, \r\n            ${Math.random() * 256}, \r\n            ${Math.random() * 256}  )`);","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\n\r\nfunction FriendListItem({ friends }) {\r\n  return (friends.map(friend => {\r\n    return (\r\n      <li key={friend.id} className={s.item}>\r\n        <span className={s.status} style={{ backgroundColor: friend.isOnline ? 'green' : 'red' }}></span>\r\n        <img className={s.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n        <p className={s.name}>{friend.name}</p>\r\n      </li>\r\n    );\r\n  })\r\n  );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired\r\n    }).isRequired\r\n  )\r\n}\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\nimport FriendListItem from './FriendListItem/FriendListItem'\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      <FriendListItem\r\n        friends={friends}\r\n      />\r\n    </ul>);\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape ({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.table}>\r\n\r\n    <thead>\r\n      <tr>\r\n      <th className={s.tHeadCell}>Type</th>\r\n      <th className={s.tHeadCell}>Amount</th>\r\n      <th className={s.tHeadCell}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => {\r\n        let { id, type, amount, currency } = item;\r\n        return (\r\n          <tr key={id} style={ items.indexOf(item)%2 ? { backgroundColor: 'rgb(234, 234, 234)' } : { backgroundColor: 'rgb(247, 247, 247)' } }>\r\n            <td className={s.tCellFirst}>{\r\n              (function toUpFirstLetter(str) {\r\n                let arr = str.split('');\r\n                arr.splice(0, 1, arr[0].toUpperCase()) \r\n                return arr.join('')\r\n              })(type)\r\n            }\r\n            </td>\r\n            <td className={s.tCellSecond}>{amount}</td>\r\n            <td className={s.tCellLast}>{currency}</td>\r\n          </tr>\r\n        )\r\n      }\r\n      )}\r\n    </tbody>\r\n      \r\n    </table> \r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    }).isRequired\r\n  )\r\n}\r\n\r\nexport default TransactionHistory;","import Container from '../Container/Container';\nimport Profile from '../Profile/Profile';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport user from '../../data/user.json';\nimport statisticalData from '../../data/statistical-data.json';\nimport friends from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        user={user} />\n      <Statistics\n        title=\"Upload stats\"\n        stats={statisticalData} />\n      <Statistics\n        stats={statisticalData}/>\n      <FriendList\n        friends={friends} />\n      <TransactionHistory\n        items={transactions} />\n    </Container>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* import 'modern-normalize/modern-normalize.css'; */\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}